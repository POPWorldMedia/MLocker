@page "/Songs"
@using MLocker.WebApp.Services
@using MLocker.Core.Models
@using MLocker.Core.Services
@inject IMusicService MusicService
@inject IJSRuntime JsRuntime
@inject IFileParsingService FileParsingService
@inject IPlayerService PlayerService
@inject IPlaylistTransformer PlaylistTransformer

<div @onclick="@PlayShuffle" class="col align-self-center clickyText">
	<span class="playShuffleButton shuffleAllButton" title="Shuffle all songs"></span> Shuffle all songs
</div>

<SongList Songs="_songList" WillClearQueueOnPlay="true" WillQueueListOnPlay="false" ShowSearch="true" ShowTrack="false" />

@code {
	List<Song> _songList;

	protected override async Task OnInitializedAsync()
	{
		var songs = await MusicService.GetAllSongs();
		_songList = songs;
	}

	private void PlayShuffle()
	{
		if (_songList.Any())
		{
			var shuffled = PlaylistTransformer.Shuffle(_songList);
			PlayerService.PlaySong(shuffled[0], shuffled, 0);
		}
	}
}