@page "/Songs"
@using MLocker.WebApp.Services
@using MLocker.Core.Models
@using MLocker.Core.Services
@inject IMusicService MusicService
@inject IJSRuntime JsRuntime
@inject IFileParsingService FileParsingService
@inject IPlayerService PlayerService
@inject IPlaylistTransformer PlaylistTransformer

<p><span id="playShuffleButton" @onclick="PlayShuffle" title="Shuffle all songs"></span> Shuffle all songs</p>

<SongList SongDictionary="_songList" WillClearQueueOnPlay="true" WillQueueListOnPlay="false" ShowSearch="true" ShowTrack="false" />

@code {
	Dictionary<int, Song> _songList;

	protected override async Task OnInitializedAsync()
	{
		var songs = await MusicService.GetAllSongs();
		_songList = PlayerService.GetIndexedList(songs);
	}

	private void PlayShuffle()
	{
		if (_songList.Any())
		{
			var shuffled = PlaylistTransformer.Shuffle(_songList);
			var shuffledSongList = PlayerService.GetIndexedList(shuffled);
			PlayerService.PlaySong(shuffledSongList[0], shuffledSongList, 0);
		}
	}
}