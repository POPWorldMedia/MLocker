@using MLocker.Core.Models
@using MLocker.Core.Services
@using MLocker.WebApp.Services
@inject IPlayerService PlayerService
@inject IPlaylistTransformer PlaylistTransformer

<h2>
	<span id="playAlbumButton" @onclick="PlayPlaylist"></span>
	<span id="playShuffleButton" @onclick="PlayShuffle"></span>
	@Playlist.Title
</h2>

<SongListSummary SongList="_songList" />

<SongList SongDictionary="_songList" WillClearQueueOnPlay="true" WillQueueListOnPlay="true" ShowSearch="false" ShowTrack="false" />

@code {
	[CascadingParameter]
	protected Playlist Playlist { get; set; }

	Dictionary<int, Song> _songList;

	protected override void OnInitialized()
	{
		_songList = PlayerService.GetIndexedList(Playlist.Songs);
	}

	private void PlayPlaylist()
	{
		if (Playlist.Songs.Any())
			PlayerService.PlaySong(_songList[0], _songList, 0);
	}

	private void PlayShuffle()
	{
		if (Playlist.Songs.Any())
		{
			var shuffled = PlaylistTransformer.Shuffle(_songList);
			var shuffledSongList = PlayerService.GetIndexedList(shuffled);
			PlayerService.PlaySong(shuffledSongList[0], shuffledSongList, 0);
		}
	}
}