@page "/Albums"
@using MLocker.WebApp.Services
@using MLocker.Core.Services
@using MLocker.Core.Models
@inject IMusicService MusicService
@inject IFileNameParsingService FileNameParsingService
@inject ISongContextStateService SongContextStateService

@if (_isDetail)
{
	<p @onclick="@BackToAll"><span class="backButton"></span> all albums</p>
	<Albums_Detail Album="_currentAlbum" />
}
else
{
	<Albums_All OnClick="@LoadAlbum" AlbumList="_albumList"/>
}

@code {
	private List<Album> _albumList = new List<Album>();
	private Album _currentAlbum;
	private bool _isDetail;

	protected override async Task OnInitializedAsync()
	{
		_albumList = await MusicService.GetAlbums();
		if (SongContextStateService.IsToAlbumLoad)
		{
			var song = SongContextStateService.Song;
			var album = _albumList.SingleOrDefault(x => x.Title == song.Album && x.AlbumArtist == song.AlbumArtist);
			if (album != null)
			{
				_currentAlbum = album;
				_isDetail = true;
			}
			SongContextStateService.IsToAlbumLoad = false;
		}
	}

	protected async Task LoadAlbum(Album album)
	{
		_currentAlbum = album;
		_isDetail = true;
		await MusicService.ScrollReset();
	}

	protected async Task BackToAll()
	{
		_isDetail = false;
		_currentAlbum = null;
		await MusicService.ScrollReset();
	}
}